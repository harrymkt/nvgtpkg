#include "form.nvgt"
#include "toml/main.nvgt"
audio_form f;
string path = "assets/pkgs";
int fc = 0;
void main() {
	f.reset();
	f.create_window("NVGT Package Manager Editor");
	wait(500);
	string[] p = packs;
	int l = f.create_list("&Packages");
	for (uint a = 0; a < p.length(); a++)
		f.add_list_item(l, p[a] + ", modified on " + file_get_date_modified(namefile(p[a])).format("%Y/%m/%d, %h:%M:%S %A %Z"), p[a]);
	int ed = f.create_button("&Edit", false);
	int cr = f.create_button("Create &New package", false);
	int can = f.create_button("E&xit", false, true);
	f.set_list_position(l, -1);
	f.focus(fc);
	while(f.active) {
		wait(5);
		f.monitor();
		string item = f.get_list_item_id(l, f.get_list_position(l));
		f.set_state(ed, item != "", item != "");
		bool newp = f.is_pressed(cr);
		if (f.is_pressed(ed) || newp) {
			fc = f.get_current_focus();
			edit((newp ? "" : item), newp);
			break;
		}
		else if (f.is_pressed(can)) break;
	}
	fc = 0;
}
void edit(string name, bool new = false) {
	f.reset();
	f.create_window((new ? "Create Package" : "Edit " + name), false);
	toml t;
	t.load(namefile(name));
	int fn = f.create_input_box("&Filename without extension (required)", name, "", 0, new == false, false, false);
	f.set_disallowed_chars(fn, "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890-_", true);
	int n = f.create_input_box("&Name (required)", t.get("", "name", name));
	int desc = f.create_input_box("&Description", t.get("", "description", ""));
	int durl = f.create_input_box("Download &URL", t.get("", "download_url", ""));
	int author_name = f.create_input_box("A&uthor name (required)", t.get("author", "name", ""));
	int author_homepage = f.create_input_box("Author home page or email", t.get("author", "homepage", ""));
	int o = f.create_button("&Save", false);
	int can = f.create_button("&Back", false, true);
	while(f.active) {
		wait(5);
		f.monitor();
		if (f.is_pressed(o)) {
			string v_fn = f.get_text(fn);
			string v_name = f.get_text(n);
			string v_desc = f.get_text(desc);
			string v_author_name = f.get_text(author_name);
			string v_author_homepage = f.get_text(author_homepage);
			string v_url = f.get_text(durl);
			if (v_name == "") v_name = v_fn;
			if (v_fn == "") {
				speak("Filename is required");
				f.focus(fn);
			} else if (v_author_name == "") {
				speak("Author name is required");
				f.focus(author_name);
			} else {
				t = toml();
				t.set("", "name", v_name);
				t.set("", "download_url", v_url);
				t.set("author", "name", v_author_name);
				if (v_author_homepage != "") t.set("author", "homepage", v_author_homepage);
				string final = "# Generated by the editor\n";
				final += t.dump();
				final.trim_whitespace_this();
				file(namefile(v_fn), "w").write(final);
				alert("Success", "Saved to " + namefile(v_fn));
				wait(250);
				break;
			}
		}
		if (f.is_pressed(can)) break;
	}
	main();
}
string[] get_packs() property {
	string[] l;
	string[] fi = find_files(path + "/*.toml");
	if (fi.length() < 1) return {};
	for (uint a = 0; a < fi.length(); a++)
		l.insert_last(fi[a].replace(path, "").replace("/", "").replace(".toml", ""));
	return l;
}
string namefile(string name) {
	return "%0/%1.toml".format(path, name);
}